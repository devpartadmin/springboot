server:
  url: '192.168.8.236' 
  port: 8081

spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://${server.url}/sshop?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=true
    username: sshopuser
    password: 12345
    # 初始化大小，最小，最大
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true
   
  # 上传文件
  http:
    multipart:
        #默认支持文件上传
        enabled: true
        #支持文件写入磁盘
        file-size-threshold : 0
        # 单个文件最大值
        max-file-size: 10MB
        # 上传文件总的最大值
        max-request-size: 100MB   
mybatis:
  mapper-locations: classpath:Mapper/**/*.xml
  type-aliases-package: com.sarnath.sshop.entity 

#pagehelper分页插件
pagehelper:
    helperDialect: mysql
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql

#jwt加密等使用
knx.security.jwt:
  token-expiration-time:  9999 # Number of minutes
  refresh-token-exp-time: 60 # Minutes
  token-issuer:           http://sarnath.com
  token-signing-key:      xm8EV6Hy5RMFK4EEACIDAwQus